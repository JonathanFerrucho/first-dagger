version: 2.1

commands:
  dagger-install:
    steps:
      - run:
          name: Install deps
          command: pip install -r ./ci/requirements-dagger.txt
      - run:
          name: Install Dagger CLI
          command: cd /usr/local && { curl -L https://dl.dagger.io/dagger/install.sh | sudo sh; cd -; }
jobs:
  build:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - dagger-install
      - run:
          name: Run Dagger pipeline
          command: dagger run --progress plain python ./ci/build.py
      - persist_to_workspace:
          root: ~/project
          paths:
            - "*"

  deploy:
    docker:
      - image: cimg/python:3.10
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/project
      - dagger-install
      - run:
          name: Run Dagger pipeline
          command: dagger run --progress plain python ./ci/deploy.py

  build-lambda:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - dagger-install
      - run:
          name: Run Dagger pipeline
          command: dagger run --progress plain python ./ci/build-lambda.py
      - persist_to_workspace:
          root: ~/project
          paths:
            - "*"

  deploy-lambda:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/project
      - dagger-install
      - run:
          name: Run Dagger pipeline
          command: dagger run --progress plain python ./ci/deploy-lambda3.py
  
  print-a-message:
    docker:
      - image: cimg/base:2022.03
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ~/project
      - run:
          name: carpetas
          command: |
            ls
            cd host
            ls

workflows:
  dagger:
    jobs:
      # - build
      # - deploy:
      #     requires:
      #       - build
      - build-lambda
      - print-a-message:
          requires:
            - build-lambda
      - deploy-lambda:
          requires:
            - build-lambda
